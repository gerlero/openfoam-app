name: Build and test

on:
  workflow_call:
    inputs:
      openfoam-version:
        type: string
        required: true
      app-version:
        type: string
        default: ''
        required: false
      app-name:
        type: string
        default: ''
        required: false
      openfoam-git-branch:
        type: string
        default: ''
        required: false
      use-cached:
        type: boolean
        default: true
        required: false
      cache-build:
        type: boolean
        default: true
        required: false
      release:
        type: boolean
        default: false
        required: false

env:
  MAKE_VARS: >
    ${{ inputs.openfoam-version != '' && format('OPENFOAM_VERSION={0}', inputs.openfoam-version) || '' }}
    ${{ inputs.app-version != '' && format('APP_VERSION={0}', inputs.app-version) || '' }}
    ${{ inputs.app-name != '' && format('APP_NAME={0}', inputs.app-name) || '' }}
    ${{ inputs.openfoam-git-branch != '' && format('OPENFOAM_GIT_BRANCH={0}', inputs.openfoam-git-branch) || '' }}

jobs:
  deps:
    runs-on: macos-12
    concurrency:
      group: deps-${{ inputs.app-name || inputs.openfoam-version }}-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Make recipes for caching
        run: |
          make deps --dry-run $MAKE_VARS > make_deps.txt
          make build --dry-run $MAKE_VARS > make_build.txt
      - name: Restore cached build
        if: inputs.use-cached
        id: cache_build
        uses: actions/cache/restore@v3
        with:
          path: build/*-deps.sparsebundle
          key: build-${{ inputs.openfoam-version }}-${{ hashFiles('make_build.txt', 'Brewfile', format('OpenFOAM-v${0}.tgz.sha256', inputs.openfoam-version), 'configure.sh') }}
      - name: Restore cached deps
        if: inputs.use-cached && steps.cache_build.outputs.cache-hit != 'true'
        id: cache_deps
        uses: actions/cache/restore@v3
        with:
          path: build/*-deps.sparsebundle
          key: deps2-${{ inputs.app-name || inputs.openfoam-version }}-${{ hashFiles('make_deps.txt', 'Brewfile') }}
      - name: Make deps
        if: steps.cache_build.outputs.cache-hit != 'true' && steps.cache_deps.outputs.cache-hit != 'true'
        run: |
          make deps $MAKE_VARS
      - name: Save deps to cache
        if: steps.cache_build.outputs.cache-hit != 'true' && steps.cache_deps.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: build/*-deps.sparsebundle
          key: deps2-${{ inputs.app-name || inputs.openfoam-version }}-${{ hashFiles('make_deps.txt', 'Brewfile') }}
  
  build:
    needs: deps
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Make recipes for caching
        run: |
          make deps --dry-run $MAKE_VARS > make_deps.txt
          make build --dry-run $MAKE_VARS > make_build.txt
      - name: Restore cached build
        if: inputs.use-cached
        id: cache_build
        uses: actions/cache/restore@v3
        with:
          path: build/*-deps.sparsebundle
          key: build-${{ inputs.openfoam-version }}-${{ hashFiles('make_build.txt', 'Brewfile', format('OpenFOAM-v${0}.tgz.sha256', inputs.openfoam-version), 'configure.sh') }}
      - name: Restore cached deps
        if: inputs.use-cached && steps.cache_build.outputs.cache-hit != 'true'
        id: cache_deps
        uses: actions/cache/restore@v3
        with:
          path: build/*-deps.sparsebundle
          key: deps2-${{ inputs.app-name || inputs.openfoam-version }}-${{ hashFiles('make_deps.txt', 'Brewfile') }}
      - name: Reuse cached build or deps
        run: |
          touch -c build/*-deps.sparsebundle
          touch -c build/*-build.sparsebundle
      - name: Build
        if: steps.cache_build.outputs.cache-hit != 'true'
        run: |
          make build $MAKE_VARS
      - name: Save build to cache
        if: steps.cache_build.outputs.cache-hit != 'true' && inputs.cache-build
        uses: actions/cache/save@v3
        with:
          path: build/*-build.sparsebundle
          key: build-${{ inputs.openfoam-version }}-${{ hashFiles('make_build.txt', 'Brewfile', format('OpenFOAM-v${0}.tgz.sha256', inputs.openfoam-version), 'configure.sh') }}
      - name: Make apps
        run: |
          make zip $MAKE_VARS DEPENDENCIES_KIND=both
      - name: Upload apps artifact
        uses: actions/upload-artifact@v3
        with:
          name: apps-${{ inputs.openfoam-version }}
          path: build/*-app-*.zip
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-11, macos-12]
        dependencies-kind: [standalone, homebrew]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download apps artifact
        uses: actions/download-artifact@v3
        with:
          name: apps-${{ inputs.openfoam-version }}
          path: build
      - name: Unzip app
        run: |
          unzip *-app-${{ matrix.dependencies-kind }}-*.zip
        working-directory: build
      - name: Install Homebrew dependencies
        if: matrix.dependencies-kind == 'homebrew'
        run: |
          brew bundle --verbose
      - name: Test
        run: |
          make test $MAKE_VARS DEPENDENCIES_KIND=${{ matrix.dependencies-kind }}

  release:
    needs: test
    if: inputs.release
    runs-on: ubuntu-latest
    steps:
      - name: Download apps artifact
        uses: actions/download-artifact@v3
        with:
          name: apps-${{ inputs.openfoam-version }}
      - name: Upload apps to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*-app-*.zip'
          tag: ${{ github.ref }}
          file_glob: true
          overwrite: false
