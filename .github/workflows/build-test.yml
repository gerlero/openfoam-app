name: Build and test

on:
  workflow_call:
    inputs:
      build-os:
        type: string
        required: true
      openfoam-version:
        type: string
        default: ''
        required: false
      app-version:
        type: string
        default: ''
        required: false
      app-name:
        type: string
        default: ''
        required: false
      openfoam-git-branch:
        type: string
        default: ''
        required: false
      cache-build:
        type: boolean
        default: true
        required: false
  workflow_dispatch:
    inputs:
      build-os:
        type: choice
        required: true
        description: Build using this macOS image
        options:
          - macos-15
          - macos-15-intel
          - macos-14
      openfoam-version:
        type: string
        default: ''
        required: false
        description: Build this OpenFOAM version
      app-name:
        type: string
        default: ''
        required: false
        description: Override app name
      openfoam-git-branch:
        type: string
        default: ''
        required: false
        description: Build this OpenFOAM Git branch
      cache-build:
        type: boolean
        default: true
        required: false
        description: Cache build artifacts for later reuse

env:
  MAKE_VARS: >
    ${{ inputs.openfoam-version != '' && format('OPENFOAM_VERSION={0} OPENFOAM_TARBALL_URL=https://raw.githubusercontent.com/gerlero/openfoam-tarballs/refs/heads/main/OpenFOAM-v{0}.tgz', inputs.openfoam-version) || '' }}
    ${{ inputs.app-version != '' && format('APP_VERSION={0}', inputs.app-version) || '' }}
    ${{ inputs.app-name != '' && format('APP_NAME={0}', inputs.app-name) || '' }}
    ${{ inputs.openfoam-git-branch != '' && format('OPENFOAM_GIT_BRANCH={0}', inputs.openfoam-git-branch) || '' }}

  OPENFOAM: ${{ inputs.openfoam-version || inputs.openfoam-git-branch }}

jobs:
  build:
    runs-on: ${{ inputs.build-os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.9.2
      - name: Prepare caching
        run: |
          pixi run make build --dry-run ${{ env.MAKE_VARS }} > make_build.txt
      - name: Restore cached build
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: build/*.sparsebundle
          key: build-${{ env.OPENFOAM }}-${{ runner.arch }}-${{ hashFiles('make_build.txt', 'pixi.lock', 'configure.sh') }}
      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pixi run make build ${{ env.MAKE_VARS }}
      - name: Save build to cache
        if: steps.cache.outputs.cache-hit != 'true' && inputs.cache-build
        uses: actions/cache/save@v4
        with:
          path: build/*.sparsebundle
          key: ${{ steps.cache.outputs.cache-primary-key }}
      - name: Make app
        run: |
          touch -c build/*.sparsebundle
          pixi run make zip ${{ env.MAKE_VARS }}
      - name: Upload app artifact
        uses: actions/upload-artifact@v5
        with:
          name: app-${{ env.OPENFOAM }}-${{ runner.arch }}
          path: build/*-app-*.zip
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-15, macos-15-intel, macos-14]
        exclude:
          - os: ${{ inputs.build-os != 'macos-15-intel' && 'macos-15-intel' || ''}}
          - os: ${{ inputs.build-os == 'macos-15-intel' && 'macos-14' || ''}}
          - os: ${{ inputs.build-os == 'macos-15-intel' && 'macos-15' || ''}}
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.9.2
      - name: Download app artifact
        uses: actions/download-artifact@v5
        with:
          name: app-${{ env.OPENFOAM }}-${{ runner.arch }}
          path: build
      - name: Unzip app
        run: |
          unzip *-app-*.zip
        working-directory: build
      - name: Test
        run: |
          pixi run make test ${{ env.MAKE_VARS }}
        env:
          PRTE_MCA_rmaps_default_mapping_policy: ':oversubscribe'
